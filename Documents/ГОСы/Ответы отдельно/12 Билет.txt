1. Тестовые вопросы:
Товар считается нормальным, если:
 а) потребитель с увеличением дохода увеличивает объем его потребления
 Нормальные товары — это такие, которые покупают больше при росте дохода (например, одежда, техника).
Конкуренция, основанная на сервисе и дополнительных услугах, называется:
 г) неценовой
 Пример: бесплатная доставка, бонусы, гарантия — всё, что не связано напрямую с ценой.
Открытая инфляция характеризуется:
 а) постоянным повышением уровня цен
 Цены растут и это явно видно на рынке — в отличие от скрытой инфляции, когда дефицит и цены официально стабильны.
Средняя склонность к потреблению — это:
 а) размеры потребления к величине дохода
 Показывает, какую часть дохода люди в среднем тратят.
Краткосрочному периоду соответствует формула издержек:
 а) TC = 180 + 6Q - 25Q²
 Присутствует постоянный элемент (180) — это фиксированные издержки, характерные для краткосрочного периода.

2. Предпосылки появления баз данных. История развития технологий хранения и обработки информации
Базы данных появились как ответ на необходимость упорядоченного хранения и быстрого доступа к большим объёмам информации.
До появления БД:
Данные хранились в бумажных архивах, журналах, карточках — это было неудобно, медленно и ненадёжно.
Затем появились файловые системы: информация записывалась в текстовые или бинарные файлы на компьютерах.

Основные проблемы файлового подхода:
Дублирование данных.
Трудности в обновлении (при изменении одной записи нужно менять все дубликаты).
Нет стандартного языка запросов.
Сложность в обеспечении целостности.

История развития баз данных:
1960-е — Иерархические и сетевые БД:
Примеры: IMS (IBM).
Данные связаны жёстко: как дерево (иерархия) или сеть.
Быстрые, но негибкие.
1970-е — Реляционная модель Эдгара Кодда (IBM):
Прорыв: данные представлены в виде таблиц.
Отношения между таблицами, строгая структура, SQL.
Пример: Oracle, PostgreSQL, MS SQL Server.
1980–90-е — Объектно-ориентированные и клиент-серверные СУБД:
Возможность хранить более сложные данные (фото, документы).
Появление первых графических интерфейсов.
2000-е — Веб-приложения, масштабирование:
Появились NoSQL-базы (MongoDB, Cassandra) для хранения неструктурированных данных.
Современный этап:
Облачные решения, автоматическое масштабирование, гибридные СУБД.
Примеры: Firebase, Amazon RDS, Google BigQuery.

Итог:
Появление баз данных — это эволюционный шаг от неудобных бумажных или файловых архивов к гибким, надёжным и мощным системам, которые лежат в основе большинства современных приложений и сервисов.

3. Методология IDEF1X
IDEF1X (Integration Definition for Information Modeling) — это методология моделирования данных, разработанная для формального и стандартизированного описания структуры информационной системы.
Она особенно полезна при проектировании реляционных баз данных.

Основные особенности IDEF1X:
Ориентирована на реализацию:
Модели, построенные в IDEF1X, могут быть непосредственно преобразованы в схемы таблиц БД.
Поддержка ключей и ссылочной целостности:
Чётко указывается, какие поля являются первичными ключами, какие — внешними.
Пример: в таблице «Заказы» внешний ключ ссылается на таблицу «Клиенты».
Разделение сущностей на:
Идентифицируемые — те, у которых есть собственный первичный ключ.
Зависимые (внедрённые) — не могут существовать без родительской сущности.
Обозначение связей с точной кратностью и обязательностью:
Например: «Один заказ может содержать много товаров» (1:N).

Сравнение с ER-моделью:
ER-диаграммы более обобщённые и визуальные, ориентированы на концептуальное проектирование.
IDEF1X — более формальный и строгий подход, заточенный под реализацию и работу с БД.

Пример использования:
При проектировании информационной системы для банка можно с помощью IDEF1X построить модель:
Сущности: Клиент, Счёт, Транзакция.
Связи: Один клиент может иметь много счетов; каждый счёт связан с транзакциями.

Итог:
Методология IDEF1X — это инструмент точного, чёткого моделирования структур данных. Она широко применяется в инженерных и корпоративных проектах, где важна безошибочная структура базы и её автоматическая генерация.