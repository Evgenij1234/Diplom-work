1. Тестовые вопросы:
Укажите форму собственности для ситуации: государство является владельцем, а коллектив временно использует здание и оборудование за определённую плату:
 а) государственная
 Собственником остаётся государство, а коллектив — арендатор.
Неявные затраты — это:
 б) стоимость затраченных ресурсов, являющихся собственностью фирмы
 Это, например, когда владелец использует своё помещение под бизнес и не платит за аренду — но потенциальный доход от аренды учитывается как неявная затрата.
Установите, по какой формуле может быть рассчитан номинальный ВВП:
 в) ВВП ном = ВВП реальный * Дефлятор
Какая из перечисленных статей не относится к доходам государственного бюджета:
 в) трансфертные платежи населению
 Это наоборот — расходы бюджета, например, пенсии или пособия.
Кривая Лоренца за три года сдвинулась дальше от биссектрисы. Это означает:
 г) усиление дифференциации доходов населения
 Чем дальше кривая от линии равенства, тем больше неравенство.

2. Концепция ER-модели. Структурные ограничения, проблемы
ER-модель (Entity-Relationship) — это способ описания структуры данных, который используется при проектировании баз данных. Она позволяет понять, какие объекты (сущности) есть в системе, какими свойствами они обладают и как они связаны между собой.
Основные понятия:
Сущности (Entity) — это "вещи", которые мы хотим хранить в базе.
 Например: "Сотрудник", "Заказ", "Принтер".
Атрибуты — это характеристики сущности.
 У "Сотрудника" это может быть ФИО, должность, ID и т.д.
Связи (Relationships) — определяют, как сущности связаны.
 Пример: "Сотрудник оформляет Заказ" — связь "оформляет".
Структурные ограничения:
Кратность (мощность связи):
 Определяет, сколько экземпляров одной сущности может быть связано с другой.
 Например: "Один заказ — от одного клиента" (1:1) или "Один клиент — много заказов" (1:N).
Обязательность участия (обязательные/необязательные связи):
 Например, у заказа должен быть клиент (обязательно), но не у каждого клиента должен быть заказ (необязательно).
Проблемы ER-моделей:
Сложность при большой модели: если система большая, ER-диаграмма может стать перегруженной.
Не все ограничения можно выразить: например, сложно напрямую показать бизнес-правила типа "в месяц можно максимум 3 заказа".
Нужна дальнейшая нормализация: ER-модель не всегда отражает структуру в виде таблиц — её нужно дополнительно обрабатывать.
Итог:
ER-модель помогает разработчикам и аналитикам визуализировать, какие данные будут в системе и как они связаны. Это шаг перед тем, как создавать таблицы в базе.

3. Технологии проектирования информационных систем
Проектирование информационных систем (ИС) — это процесс, при котором продумывается архитектура будущей системы, включая её функции, данные и способы взаимодействия с пользователями.
Основные технологии проектирования:
Моделирование процессов и данных:
UML-диаграммы (например, use-case, диаграммы классов, активности) — описывают структуру и поведение системы.
IDEF0, BPMN — показывают бизнес-процессы и взаимосвязи между функциями.
ER-модели — для проектирования базы данных.
CASE-инструменты (Computer-Aided Software Engineering):
Специальные программы, которые помогают создавать схемы, описания и даже автоматически генерировать код.
Примеры: Enterprise Architect, Visual Paradigm, Erwin.
Архитектурные подходы:
Модульная архитектура — система разбивается на независимые блоки.
Клиент-серверная модель — разделение на серверную часть (где хранятся данные) и клиентскую (интерфейс пользователя).
Микросервисная архитектура — каждая функция работает как отдельное приложение.
Проектирование интерфейсов (UI/UX):
Проработка макетов экранов, логики действий пользователя, визуальной структуры.
Инструменты: Figma, Adobe XD, Axure.
Документирование:
Создание технической документации: ТЗ, спецификаций, инструкций для пользователей и разработчиков.
Зачем это всё нужно:
Упрощает командную работу (все понимают структуру системы).
Снижает риски ошибок и недопонимания.
Помогает внедрять и сопровождать ИС быстрее и качественнее.