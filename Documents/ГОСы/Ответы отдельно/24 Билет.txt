1. Тестовые вопросы:
Метод познания, предполагающий разделение целого на части:
 г) анализ
 Анализ — это разложение сложного объекта на составляющие с целью лучшего понимания.
От потребительских предпочтений зависит:
 б) положение и наклон кривых безразличия
 Кривые безразличия отражают личные предпочтения между различными наборами благ.
Благо, которым могут одновременно пользоваться многие:
 б) общественное благо
 Примеры: уличное освещение, оборона — нельзя исключить из потребления и нет соперничества.
Деньги служат:
 г) все ответы верны
 Деньги выполняют функции: меры стоимости, средства обращения, платежа, накопления и др.
К микроэкономическому утверждению НЕ относится:
 б) с 2000 г. в России наблюдается экономический рост
 Это макроэкономика, так как охватывает экономику в целом. Остальные варианты — про отдельные рынки.

2. Методы и средства логического проектирования реляционных баз данных
Логическое проектирование — это этап, на котором концептуальная модель данных (ER-диаграммы и связи) преобразуется в структуру таблиц, пригодную для реализации в реляционной СУБД.

Цель логического проектирования:
Создать реляционную схему базы данных, оптимизированную для хранения, связи и обработки информации.

Основные методы:
1. Нормализация:
Разделение данных на таблицы так, чтобы избежать дублирования и обеспечить целостность.
Происходит в несколько нормальных форм (1НФ, 2НФ, 3НФ и т. д.).
Пример: таблицу "Заказы" делят на "Заказы" и "Покупатели", если покупательские данные повторяются.
2. Определение ключей:
Первичный ключ — уникальный идентификатор строки (например, id).
Внешний ключ — поле, ссылающееся на первичный ключ в другой таблице.
3. Установление связей между таблицами:
Один ко многим (1:N) — например, один клиент может иметь много заказов.
Многие ко многим (M:N) — реализуется через промежуточную таблицу.
4. Определение ограничений:
NOT NULL, UNIQUE, CHECK, DEFAULT — обеспечивают правильность и согласованность данных.

Средства:
SQL DDL (Data Definition Language):
 CREATE TABLE, ALTER TABLE, DROP TABLE.
CASE-средства:
 Erwin Data Modeler, SQL Developer Data Modeler, Visual Paradigm.

Итог:
Логическое проектирование — важнейший шаг, где концептуальные идеи превращаются в структурированную, реализуемую схему таблиц, соответствующую требованиям бизнеса и обеспечивающую надёжную работу БД.

3. Базовая архитектура сервера баз данных
Сервер баз данных — это программно-аппаратный комплекс, обеспечивающий хранение, обработку и защиту данных, а также обслуживание запросов от пользователей и приложений.

Основные компоненты архитектуры:
1. Ядро СУБД:
Отвечает за выполнение SQL-запросов, управление транзакциями, блокировками и обработку данных.
Включает оптимизатор запросов, планировщик выполнения и ядро хранения.
2. Механизм управления данными:
Хранилище данных — файлы, где физически сохраняется информация.
Кэш (буферный пул) — ускоряет доступ к часто используемым данным.
Журнал транзакций (лог) — обеспечивает восстановление данных в случае сбоя.
3. Подсистема безопасности:
Аутентификация пользователей (логин/пароль, роли).
Ограничения доступа к данным и операциям.
4. Сетевой интерфейс:
Обеспечивает обмен данными между клиентом и сервером по сетевым протоколам (TCP/IP, HTTP, ODBC, JDBC).
Примеры: PostgreSQL, MySQL, SQL Server.
5. Механизмы репликации и резервного копирования:
Позволяют создавать копии данных, обеспечивая отказоустойчивость и защиту от потерь.

Дополнительно:
Триггеры, процедуры и функции — логика, выполняемая на сервере.
Индексы — ускоряют поиск по таблицам.

Итог:
Базовая архитектура сервера БД обеспечивает устойчивую, защищённую и высокопроизводительную среду, в которой хранятся и обрабатываются данные приложений. Она состоит из ядра, хранилищ, механизмов безопасности и сетевого взаимодействия.