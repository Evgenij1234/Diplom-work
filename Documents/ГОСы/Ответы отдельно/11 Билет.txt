1. Тестовые вопросы:
Излишек потребителя – это:
 б) разница между максимальной ценой, которую потребитель готов заплатить за единицу товара, и его рыночной ценой
 Это выгода, которую получает покупатель, когда он платит меньше, чем готов был.
Фирма действует на рынке ____________, если производство в отрасли распределено между несколькими фирмами, продукт однородный и/или дифференцированный:
 г) олигополии
 Олигополия — это несколько крупных игроков, например, рынок авиаперевозок.
Необходимость обновления основных капитальных благ, требующих длительное время и огромных затрат — причина:
 в) длинных волн конъюнктуры
 Это 40–60-летние циклы (волны Кондратьева), связанные с технологическими изменениями.
Если располагаемый доход вырос с 600 тыс. до 650 тыс., а потребление увеличилось на 40 тыс., то предельная склонность к сбережению:
 в) 0,2
 ΔСбережения = 50 тыс. – 40 тыс. = 10 тыс.; ΔДохода = 50 тыс. → 10 / 50 = 0,2
Закон убывающей предельной производительности состоит в том, что:
 в) убывает предельный продукт переменного ресурса при постоянных затратах прочих факторов
 То есть: если добавлять работников, а оборудование оставить тем же — отдача от каждого нового снижается.

2. Концепция ER-модели. Структурные ограничения, проблемы
ER-модель (Entity-Relationship) — это способ представить, какие данные будут храниться в базе, и как они связаны между собой. Она активно применяется на стадии концептуального проектирования баз данных.

Основные компоненты ER-модели:
Сущности (Entity) — объекты, о которых мы храним данные.
 Например: «Студент», «Курс», «Преподаватель».
Атрибуты — характеристики сущностей.
 Пример: у «Студента» — имя, номер зачётки, дата рождения.
Связи (Relationships) — отображают отношения между сущностями.
 Например: «Студент записан на Курс».

Структурные ограничения:
Мощность связи (кардинальность):
 - Один к одному (1:1)
 - Один ко многим (1:N)
 - Многие ко многим (M:N)
Обязательность участия:
 Показывает, обязательна ли связь для сущности.
 Пример: у студента обязательно должен быть хотя бы один курс.
Идентифицирующие связи:
 Когда связь влияет на ключ сущности (например, связь "зависит от").

Проблемы и ограничения ER-моделей:
Сложность на больших проектах — диаграммы перегружаются.
Не всегда очевидно, как реализовать в таблицах — требует дополнительного преобразования в реляционную модель.
Ограниченная выразительность — сложно описывать бизнес-правила (например, "максимум 5 студентов на курсе").
Итог:
ER-модель — важный инструмент при проектировании БД, позволяющий понятно и визуально представить структуру данных, но требует грамотного применения и перехода к физической реализации.

3. Моделирование данных
Моделирование данных — это процесс, в котором мы структурируем информацию, чтобы удобно и эффективно хранить её в базе данных. Цель — понять, какие данные, в каком виде и с какими связями должны быть в системе.

Основные этапы:
Концептуальное моделирование (что хранить):
 - Используется ER-модель — описываются сущности, атрибуты и связи.
 - Независимо от конкретной СУБД.
Логическое моделирование (как представить в БД):
 - Преобразование в таблицы, определение ключей, типов данных, связей.
 - Пример: сущность "Клиент" → таблица с полями: ID, Имя, Телефон.
Физическое моделирование (как реализовать на диске):
 - Определяются индексы, типы хранения, способы разбиения таблиц (partitioning).

Виды моделей:
Иерархическая — древовидная структура (редко используется).
Сетевая — сложные связи, применяется в специализированных системах.
Реляционная — основана на таблицах, самая популярная модель.
Объектно-ориентированная — данные хранятся в виде объектов (подходит для программирования).

Почему моделирование важно:
Уменьшает ошибки при проектировании.
Делает структуру данных понятной для всех участников проекта.
Упрощает последующую разработку и поддержку.
Итог:
Моделирование данных — фундамент баз данных и информационных систем. Это процесс, который определяет структуру, взаимосвязь и логическую целостность всей информации в системе.