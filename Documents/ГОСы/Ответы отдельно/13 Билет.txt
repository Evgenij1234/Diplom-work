1. Тестовые вопросы:
Реализацию интересов рыночных субъектов и соединение интересов продавца и покупателя обеспечивает:
 б) посредническая функция рынка
 Рынок выступает как посредник между продавцом и покупателем, обеспечивая их взаимодействие.
К общим чертам рынков монополистической и совершенной конкуренции относятся:
 в) множество продавцов и покупателей, оперирующих на рынке
 В обоих типах рынков есть большое количество участников, но различие — в однородности или разнообразии товара.
Если в январе цена на хлеб выросла на 3,5%, а на молоко на 4,1%, то это:
 г) несбалансированная инфляция
 Цены растут неравномерно по товарам — это и есть признак несбалансированной инфляции.
Парадокс бережливости означает, что увеличение сбережений приводит к:
 в) уменьшению дохода
 Если все начинают больше сберегать, меньше тратят — падает спрос, производство и доход.
От потребительских предпочтений зависит:
 б) положение и наклон кривых безразличия
 Кривые безразличия показывают, какие наборы товаров одинаково желанны для потребителя.

2. Сравнительная характеристика поколений СУБД
СУБД (системы управления базами данных) развивались в несколько поколений, каждое из которых отражает изменение подходов к хранению, обработке и доступу к данным.

1-е поколение: Файловые системы (1950–1960 гг.)
Данные хранились в виде простых файлов (текстовых или бинарных).
Нет структуры, нет связи между данными.
Минусы: дублирование информации, трудности с поиском и обновлением.

2-е поколение: Иерархические и сетевые СУБД (1960–1970 гг.)
Примеры: IMS (IBM), CODASYL.
Иерархическая модель: данные организованы как дерево.
Сетевая модель: данные связаны множественными связями.
Плюсы: быстрее файлов, связь между записями.
Минусы: сложность в сопровождении, жёсткая структура.

3-е поколение: Реляционные СУБД (1970–настоящее время)
Основаны на табличной структуре (Эдгар Кодд, 1970 г.).
Примеры: MySQL, PostgreSQL, Oracle, MS SQL Server.
Используется SQL — универсальный язык запросов.
Плюсы: гибкость, масштабируемость, безопасность.
Минусы: не всегда удобно хранить сложные данные (изображения, JSON и т.д.)

4-е поколение: Объектно-ориентированные СУБД
Интеграция с объектно-ориентированным программированием.
Примеры: db4o, ObjectDB.
Плюсы: хорошо подходят для сложных объектов.
Минусы: ниже производительность, меньшая поддержка.

5-е поколение: NoSQL и NewSQL (2000-е — сегодня)
Предназначены для больших объемов неструктурированных данных.
Примеры: MongoDB, Cassandra, Redis, Neo4j.
Поддерживают масштабирование, гибкость в структуре.
NewSQL — новые решения, сочетающие SQL + масштабируемость.

Вывод:
Каждое поколение СУБД решает задачи своего времени: от простого хранения — к гибкому управлению сложной информацией. Современные системы сочетают элементы нескольких поколений.

3. Классификация методов проектирования информационных систем (ИС)
Проектирование ИС — это процесс создания модели будущей системы, включая её функции, структуру данных, интерфейсы и поведение.
Существует несколько классификаций методов проектирования, в зависимости от подхода и уровня детализации.

1. По уровню абстракции:
Концептуальное проектирование — общее представление о системе, её функциях и целях (без деталей реализации).
Логическое проектирование — структура данных, логика процессов.
Физическое проектирование — конкретная реализация (таблицы, индексы, интерфейсы, код).

2. По методу описания:
Функционально-ориентированное проектирование
 Основа — функции системы и потоки данных.
 Инструмент — DFD-диаграммы.
 Пример: методология SADT.
Объектно-ориентированное проектирование
 Фокус — объекты, классы, методы.
 Инструмент — UML-диаграммы.
 Применяется при разработке ПО.
Информационно-ориентированное проектирование
 Основной объект — данные.
 Используются ER-диаграммы, IDEF1X, реляционная модель.

3. По способу организации:
Каскадный (Waterfall) — этапы идут строго друг за другом (анализ → проектирование → реализация).
Итерационный (Agile, Scrum) — постоянные циклы доработки, гибкое внесение изменений.
Прототипный (RAD) — быстрая реализация прототипов и их тестирование.

Вывод:
Выбор метода проектирования зависит от типа проекта, требований, команды и желаемой гибкости. Часто применяются гибридные подходы, сочетающие сильные стороны нескольких методов.