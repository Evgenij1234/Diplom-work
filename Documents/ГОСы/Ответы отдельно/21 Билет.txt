1. Тестовые вопросы:
Кардиналистский подход к полезности предполагает:
 г) возможность определения количественной величины полезности
 Кардиналисты считают, что полезность можно измерить в числовом выражении (например, "10 единиц удовольствия"). Ординалисты лишь сравнивают предпочтения (без чисел).
Затраты третьих лиц, не отраженные в ценах:
 г) отрицательные внешние эффекты
 Пример: завод загрязняет воздух, жители болеют, но цена продукции не включает их убытки.
Повышение учетной ставки Центральным банком направлено на:
 б) стимулирование роста величины сбережений населения
 Повышение ставки делает кредиты дорогими и стимулирует людей и бизнес меньше тратить и больше сберегать.
Автор теории сравнительных преимуществ:
 б) Д. Риккардо
 Он доказал, что даже менее производительные страны могут выигрывать от торговли, специализируясь на том, что у них получается лучше относительно других товаров.
Альтернативные издержки посещения хоккея при зарплате 700 руб./час и 3-х часах отсутствия:
 а) 2100 рублей
 700 × 3 = 2100 — это упущенный доход, альтернативная стоимость времени.

2. Назначение реляционной алгебры и реляционного исчисления. Начальная реляционная алгебра Э. Кодда
Реляционная алгебра и реляционное исчисление — это формальные методы работы с реляционными базами данных, предложенные Эдгаром Коддом, основателем реляционной модели данных. Они легли в основу языка SQL.

Реляционная алгебра:
Это процедурный язык запросов, в котором описывается как получить результат — пошагово, через операции над таблицами.
Основные операции:
SELECT (σ) — выбор строк по условию
PROJECT (π) — выбор нужных столбцов
UNION (∪) — объединение результатов двух таблиц
INTERSECT (∩) — пересечение двух таблиц
SET DIFFERENCE (-) — разность (исключение записей одной из таблиц)
JOIN (⨝) — соединение таблиц по общим значениям
CARTESIAN PRODUCT (×) — все возможные пары строк двух таблиц
Пример:
π_ФИО(σ_отдел='Продажи'(Сотрудники))
Выбрать ФИО сотрудников из отдела "Продажи".

Реляционное исчисление:
Это декларативный язык — в нём описывается что нужно получить, а не как.
Бывает:
Кортежное — работа с целыми строками.
Доменное — работа с отдельными значениями.
Пример:
Найти все X, такие что X — сотрудник и X работает в "Продажах".

Зачем это нужно:
Даёт теоретическую основу языка SQL.
Позволяет описывать сложные запросы математически.
Используется в оптимизаторах запросов внутри СУБД.

Итог:
Реляционная алгебра — это основа SQL. Исчисление — альтернатива для описания запросов на логическом уровне. Вместе они формируют формальный язык работы с данными.

3. Классификация средств проектирования информационных систем
Средства проектирования ИС — это программы и платформы, которые помогают анализировать, моделировать и документировать структуру и логику будущей информационной системы.

Классификация по назначению:
1. CASE-средства (Computer-Aided Software Engineering):
Предназначены для автоматизации проектирования и документации.
Функции:
Построение ER-диаграмм, DFD, UML;
Генерация SQL-кода;
Формирование ТЗ.
Примеры:
Enterprise Architect
Visual Paradigm
Erwin Data Modeler
PowerDesigner

2. Средства прототипирования и интерфейсного проектирования:
Используются на стадии проектирования пользовательского интерфейса.
Примеры:
Figma
Adobe XD
Axure

3. Средства моделирования процессов:
Ориентированы на бизнес-процессы (BPMN, IDEF0, EPC).
Примеры:
Bizagi Modeler
ARIS Express
Draw.io

4. Средства интеграции и управления архитектурой предприятия:
Применяются в крупных организациях.
Позволяют строить связи между ИТ-системами, бизнес-функциями и процессами.
Примеры:
Sparx EA
IBM Rational System Architect

Итог:
Средства проектирования ИС выбираются в зависимости от цели: моделировать данные, интерфейс, процессы или всё вместе. Современные CASE-средства позволяют ускорить проектирование и уменьшить число ошибок за счёт визуализации и автоматизации.